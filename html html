<!DOCTYPE html>
<html lang="en"><style>.search container{display: flex;;align-items: center;justify-content: cneter;}
form{display: flex;align-items: center;position: relative;}
input[type=text]{padding: 10px;font-size: 17px;border: none;width: 80%;background-color: #f1f1f1;border-radius: 20px;}
button{position: absolute;right: +41px;
12;;border: none;border-radius: 50%;padding: 10px;background-color: blue;color: black
;font-size: 17px;border: none;cursor: pointer;}
</style>
<head><title>hucho search box

</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body style="background-image: url(hucho.jpg.jpg);background-size: cover;"><div class="search-container">
    <h1 style="font-size: 45px;text-align: center;color: red;">hucho</h1>
    <form>
        <input type="text"placeholder="search..."name="search">
        <button type="submit">ok
            <i class="fa fa -search"></i>
        </button>
    </form>
</div>

</div><br>
<br>

<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>
</body>
</html>